// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineRecommendation.Data;

#nullable disable

namespace WineRecommendation.Migrations
{
    [DbContext(typeof(WineDbContext))]
    partial class WineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("WineRecommendation.Models.WineData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Alcohol")
                        .HasColumnType("REAL");

                    b.Property<float>("Chlorides")
                        .HasColumnType("REAL");

                    b.Property<float>("CitricAcid")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("Density")
                        .HasColumnType("REAL");

                    b.Property<float>("FixedAcidity")
                        .HasColumnType("REAL");

                    b.Property<float>("FreeSulfurDioxide")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsTrainingData")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PH")
                        .HasColumnType("REAL");

                    b.Property<float>("Quality")
                        .HasColumnType("REAL");

                    b.Property<float>("ResidualSugar")
                        .HasColumnType("REAL");

                    b.Property<float>("Sulphates")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalSulfurDioxide")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<float>("VolatileAcidity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Wines");
                });

            modelBuilder.Entity("WineRecommendation.Models.WinePredictionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Alcohol")
                        .HasColumnType("REAL");

                    b.Property<float>("Chlorides")
                        .HasColumnType("REAL");

                    b.Property<float>("CitricAcid")
                        .HasColumnType("REAL");

                    b.Property<bool>("ContributedToRetraining")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Density")
                        .HasColumnType("REAL");

                    b.Property<float>("FixedAcidity")
                        .HasColumnType("REAL");

                    b.Property<float>("FreeSulfurDioxide")
                        .HasColumnType("REAL");

                    b.Property<float>("PH")
                        .HasColumnType("REAL");

                    b.Property<float>("PredictedQuality")
                        .HasColumnType("REAL");

                    b.Property<string>("PredictedType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PredictionDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("ResidualSugar")
                        .HasColumnType("REAL");

                    b.Property<float>("Sulphates")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalSulfurDioxide")
                        .HasColumnType("REAL");

                    b.Property<float>("VolatileAcidity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PredictionResults");
                });
#pragma warning restore 612, 618
        }
    }
}
